{"version":3,"file":"static/js/970.e2f0591a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","utils/contsctsCounter.js","components/ContactsCounter/ContactsCounter.styled.jsx","components/ContactsCounter/ContactsCounter.jsx","pages/Contacts/Contacts.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/Contacttem/Contacttem.styled.jsx","components/ModalOnChangeContact/ModalOnChangeContact.styled.jsx","components/ModalOnChangeContact/ModalOnChangeContact.jsx","components/ContactList/Contacttem/ContactItem.jsx","redux/filter/selectors.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// 1-ЫЙ ВАРИАНТ С БИБЛИОТЕКАМИ FORMIK И YUP\n\nimport styled from '@emotion/styled';\nimport {  Form, Field } from 'formik';\n\nexport const FormContainer = styled(Form )`\ndisplay: flex;\nbackground-color: #d5f7d7;\nflex-direction: column;\n background: rgba(0, 0, 0, 0.1);\n border:none;\nborder-radius:20px;\nwidth: 500px;\nheight: auto;\npadding: 20px;\nopacity: 0.9;\nmargin-left: auto;\nmargin-right: auto;\n`\nexport const FormLabelName = styled.label`\nfont-size: 30px;\nfont-weight: 400;\nmargin-bottom: 15px;\nposition:relative;\nfont-family: 'Bagel Fat One', cursive;\n`\n\nexport const FormInputName = styled(Field)`\nborder: 1px solid #b3b90d;\npadding: 5px;\nmargin-bottom: 30px;\nwidth: 458px;\nheight: 40px;\nfont-size: 28px;\nborder-radius: 10px;\nfont-family: 'Caveat', cursive;\noutline: none;\n\n&:hover, &:focus{\n    border-color: #00b1ff;\n    background-color: #9efeff;\n}\n`\n\nexport const FormInputTel = styled(Field)`\nborder: 1px solid #b3b90d;\npadding: 5px;\nmargin-bottom: 30px;\nwidth: 458px;\nheight: 40px;\nfont-size: 28px;\nborder-radius: 10px;\nfont-family: 'Caveat', cursive;\n\n&:hover, &:focus{\n      border-color: #00b1ff;\n      background-color: #9efeff;\n      outline: none;\n}\n`\nexport const FormButton = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nfont-weight: 400;\nwidth: 150px;\nheight: 50px;\nfont-size: 20px;\npadding-top: 5px;\npadding-bottom: 5px;\nborder-radius: 8px;\ncursor:pointer;\nposition:relative;\nz-index:0;\n\ncolor: #111;\noutline: none;\nfont-family: 'Bagel Fat One', cursive;\n\n&::before{\n    content:'';\n    background: linear-gradient(\n        45deg,\n        #ff0000,\n        #ff7300,\n        #fffb00,\n        #48ff00,\n        #00ffd5,\n        #002bff,\n        #7a00ff,\n        #ff00c8,\n        #ff0000\n    );\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    opacity: 0;\n    transition: opacity 0.3s easy-in-out;\n    border-redius: 10px;\n    animation: glow 15s linear infinite;\n}\n\n&:hover::before{\n    opacity: 1;\n}\n\n&::after{\n    z-index: -1;\n    content:'';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: #fff;\n    left: 0;\n    top: 0;\n    border-radius: 10px;\n    \n}\n\n@keyFrames glow{\n    0% {\n        background-position: 0 0;\n    }\n    50% {\n        background-position: 400% 0;\n    }\n    100% {\n        background-position: 0 0;\n    }\n}\n`\n\nexport const ErrorText = styled.div`\nfont-size: 24px;\ncolor:red;\nposition: absolute;\nbottom:0;\nleft:0;\n`\n","export const contactsSelector = state => state.contacts.items\n\nexport const isLoadingSelector=state=>state.contacts.isLoading\n\nexport const contactsErrorSelector=state=>state.contacts.error","import React from \"react\";\nimport { FormContainer, FormLabelName, FormInputName, FormInputTel,  FormButton, ErrorText } from \"./ContactForm.styled\";\nimport { Formik, ErrorMessage } from 'formik';\nimport *as yup from 'yup'\nimport {  useDispatch, useSelector } from \"react-redux\";\nimport { addContactThunk } from \"redux/contacts/operations\";\nimport { contactsSelector } from \"redux/contacts/selectors\";\n const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n// phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid')\nconst schame = yup.object({\n  name: yup.string(\"It should be string\").required(\"It shouldn't be empty\").max(16).trim().matches(),\n  phone: yup.string().matches(phoneRegExp, 'Phone number is not valid').required(\"It shouldn't be empty\")\n });\n\n const initialValue = {\n        name: '',\n        phone:''\n}\n\nconst FormError = ({name}) => {\n    return (<ErrorMessage\n        name={name}\n        render={message =>(<ErrorText> {message}</ErrorText>)}\n    />)\n}\n    \n\nconst ContactForm=()=>{\n    const contacts = useSelector(contactsSelector)\n    const dispatch=useDispatch()\n    const handleSubmit = ({ name: newName, phone }, actions) => {\n        if(contacts.some(({name})=>newName===name)){\n            alert(`${newName} is already in contacts`)\n            return\n        }\n        dispatch(addContactThunk({ name: newName, number: phone.toString() }))\n       actions.resetForm() \n}\n\n    return (<Formik\n                initialValues={initialValue}\n                onSubmit={handleSubmit}\n                validationSchema={schame}\n            >\n                <FormContainer autoComplete=\"off\">\n                    <FormLabelName >Name\n                        <FormInputName \n                            type=\"text\"\n                            name=\"name\" \n                        />\n                        <FormError name=\"name\"/>\n                    </FormLabelName>\n                                \n                    <FormLabelName>Number\n                        <FormInputTel\n                            type=\"tel\"\n                            name=\"phone\"\n                        />\n                        <FormError name=\"phone\"/>\n                    </FormLabelName>\n                    <FormButton type='submit'>Add contact</FormButton>\n                </FormContainer>\n            </Formik>)\n}\n\n\nexport default ContactForm\n\n\n\n","\nexport const countContacts = (contacts) => {\n    if (contacts.length === 0) {\n        return 0\n    }\n    return contacts.length\n}","import styled from '@emotion/styled';\n\nexport const CounterContactsContainer = styled.div`\ndisplay: flex;\nalign-items: center;\nmargin-top: 20px;\n`\nexport const CounterTextTitle = styled.p`\nmargin: 0;\nfont-size: 36px;\npadding-left: 90px;\nfont-family: 'Caveat', cursive;\n\n`\n\nexport const CounterText = styled.p`\nmargin: 0;\nfont-weight: 700;\nfont-size: 36px;\nfont-family: 'Caveat', cursive;\ntext-indent: 5px;\n`","import { useSelector } from \"react-redux\"\nimport { countContacts } from \"utils/contsctsCounter\"\nimport { CounterContactsContainer, CounterText, CounterTextTitle } from \"./ContactsCounter.styled\"\nimport { contactsSelector } from \"redux/contacts/selectors\"\nconst ContactsCounter = () => {\n    const contacts=useSelector(contactsSelector)\n    return (\n        <CounterContactsContainer>\n            <CounterTextTitle>Total contacts:</CounterTextTitle>\n            <CounterText>{countContacts(contacts)}</CounterText>\n        </CounterContactsContainer>\n    )\n}\n\nexport default ContactsCounter","import styled from \"@emotion/styled\"\nimport ContactsBg from './/..//..//images/5143237.jpg'\n\nexport const ApiTitleH1 = styled.h1`\n    margin:0;\n    padding-bottom: 10px;\n    text-align: center;\n    font-family: 'Bagel Fat One', cursive;\n    `\n\nexport const ApiTitleH2 = styled.h2`\n    margin:0;\n    padding-top: 20px;\n    padding-bottom: 10px;\n    font-family: 'Bagel Fat One', cursive;\n    `\nexport const ContactsContainer = styled.div`\nwidth: 768px;\nmargin-left: auto;\nmargin-right: auto;\nmin-height: 100vh;\nheight: 100%;\n background-image: url(${ContactsBg});\n    background-size: cover;\n    background-position: center; \n    background-size: 768px;\n    background-repeat: repeat;\n    background-attachment: fixed;\npadding: 24px;\npadding-top: 70px;\nbox-shadow: 0px 0px 100px 50px #000;\n`","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\ndisplay:flex;\nflex-direction:column;\n`\n\nexport const IsLoading = styled.p`\nfont-size:32px;\nmargin-bottom: 10px;\npadding-top:0;\npadding-left: 112px;\ntext-indent: 0;\nmargin-top:0;\nfont-family: 'Bagel Fat One', cursive;\n`\n\nexport const FilterLable = styled.label`\nfont-size:32px;\nmargin-bottom: 10px;\npadding-left: 112px;\nfont-family: 'Bagel Fat One', cursive;\n`\n\nexport const FilterInput = styled.input`\nwidth: 450px;\nheight: 40px;\nborder-color: #b3b90d;\nfont-size: 32px;\nborder-radius: 8px;\npadding-left: 15px;\nmargin-left: 112px;\ncursor:pointer;\noutline: none;\nopacity:0.8;\nfont-family: 'Caveat', cursive;\n\n&:hover, &:hover{\n    animation: pulsare 2s ease-in-out;\n    border-color:#9bf7fa;\n    opacity:1;\n}\n\n@keyframes pulsare {\n    0% {\n        box-shadow: 0 0 10px #5ddcff,\n            0 0 20px #4e00c2;\n            background-color: #9bf7fa;\n    }\n}\n\n`\n","import React from \"react\";\nimport { FilterContainer,FilterLable, FilterInput, IsLoading } from \"./Filter.styled\";\nimport { useDispatch} from \"react-redux\";\nimport { setStatusFilter } from \"redux/filter/filterSlice\";\nimport debounce from \"lodash.debounce\";\n\n\nfunction Filter() {\n    const dispatch = useDispatch();\n    const isLoading=false\n    const handleFilterChange = (event) => {\n        dispatch(setStatusFilter(event.target.value))\n    }\n\n    return (<FilterContainer>\n        {isLoading\n            ? <IsLoading>Loading...</IsLoading>\n            : <FilterLable htmlFor=\"findContacts\">Find contacts by name</FilterLable>\n        }\n                <FilterInput type=\"text\" id='findContacts' onChange={debounce(handleFilterChange, 1000)}/>\n            </FilterContainer>\n                )\n}\n\n\nexport default Filter\n","import styled from '@emotion/styled';\n\nexport const ContactListContainer = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth:680px;\nmargin-top: 10px;\npadding-left: 0;\nmargin-right: auto;\nmargin-left: auto;\n`\nexport const NoContactsText = styled.div`\nfont-size:37px;\nfont-family: 'Caveat', cursive;\n`\n","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\nimport { IoPersonCircleSharp } from \"react-icons/io5\"\nexport const ContactListItem = styled.li`\ndisplay:flex;\nalign-items: center;\n`\nexport const ContactListItemInfo = styled.div`\ndisplay:flex;\nalign-items: center;\nwidth: 100%;\njustify-content: space-between\n`\nexport const ContactIcon = styled(IoPersonCircleSharp)`\nwidth:24px;\nheight:24px;\ncolor:#00005a;\n`\nexport const ContactListItemText = styled.p`\nfont-size:27px;\nfont-weight: 600;\ncolor:#00005a;\nmargin-right: 15px;\nmargin-top:0;\nmargin-bottom:5px;\nmargin-right:auto;\ntext-indent: 3px;\nfont-family: 'Caveat', cursive;\n`\nexport const ButtonChangeContact = styled(Button)`\ndisplay:flex;\nalign-items: center;\njustify-content: center;\nwidth: 90px;\nheight: 35px;\nbackground-color:#aed219;\nborder-radius: 20px;\nmargin-right: 5px;\n\n&:hover, &:focus{\n\n    transform: scaleX(1.05);\n    background-color: #f0d800;\n    box-shadow: 4px 6px 11px rgb(4 12 129 / 93%);\n}\n`\n\n\nexport const ButtonDeliteContact = styled.button`\ndisplay:flex;\nalign-items: center;\njustify-content: center;\nwidth: 80px;\nheight: 35px;\nbackground-color:#f47c74;\n    border-radius: 20px;\n    border: none;\n\n&:hover, &:focus{\n    transform: scaleX(1.05);\n    background-color: #f22020db;\n    box-shadow: 4px 6px 11px rgb(4 12 129 / 93%);\n}\n`\nexport const ButtonText = styled.p`\nfont-size: 18px;\nmargin:0;\ntext-indent:unset;\ncolor:black;\n`","import styled from \"@emotion/styled\";\n\nexport const ModalTitle = styled.h3`\nfont-size: 36px;\nfont-family: 'Dancing Script', cursive;\n`\n\nexport const ModalForm = styled.form`\n    display: flex;\n    row-gap: 5px;\n    flex-direction: column;\n`\n\nexport const ModalInputContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 10px;\n`\n\nexport const ModalLabel = styled.label`\nfont-size: 24px;\nfont-weight: 700;\nmargin-bottom: 5px;\nfont-family: 'Dancing Script', cursive;\n`\n\nexport const ModalInput = styled.input`\nfont-size: 26px;\nfont-family: 'Caveat', cursive;\nborder-radius: 20px;\noutline:none;\nborder: 1px solid #b3b90d;\npadding-left:10px;\n\n&:hover, &:focus{\n    border-color: #00b1ff;\n    background-color: #9efeff;\n}\n`\n\nexport const ModalButton = styled.button`\nfont-family: 'Bagel Fat One', cursive;\nwidth: 70px;\nmargin-left: auto;\nmargin-right: auto;\nborder-radius: 15px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nfont-size: 20px;\nletter-spacing: 1px;\nbackground-color:#e7e257;\noutline:none;\nborder: 2px solid #33b5cd91;\n\n&:hover, &:focus{\n    background-color:#f3eb19;\n\n}\n`","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { useDispatch } from 'react-redux';\nimport { changeContactThunk } from 'redux/contacts/operations';\nimport { ModalTitle, ModalForm, ModalInput, ModalInputContainer, ModalLabel, ModalButton} from './ModalOnChangeContact.styled';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: '#86e2e3',\n  border: '2px solid #33b5cd91',\n  boxShadow: '0px 0px 37px 25px #33b5cd91',\n  borderRadius: 5,\n  outline:'none',\n  p: 4,\n};\n\nfunction telephoneCheck(str) {\n  var patt = new RegExp(/^(\\+{0,})(\\d{0,})([(]{1}\\d{1,3}[)]{0,}){0,}(\\s?\\d+|\\+\\d{2,3}\\s{1}\\d+|\\d+){1}[\\s|-]?\\d+([\\s|-]?\\d+){1,2}(\\s){0,}$/gm);\n  return patt.test(str);\n}\n\nconst ModalOnChangeContact=({onCloseModal, open, id, name, number}) =>{\n    const dispatch=useDispatch()\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const name = e.target.elements.name.value\n        const number = e.target.elements.number.value;\n        const isValid = telephoneCheck(number)\n        if (!isValid) {\n          alert('Please enter a valid phone number')\n          return\n        }\n        const contact={name, number}\n        dispatch(changeContactThunk({ id, contact }))\n        onCloseModal()\n}\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={()=>onCloseModal()}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <ModalTitle>Change name or number</ModalTitle>\n          <ModalForm onSubmit={handleSubmit}>\n            <ModalInputContainer>\n              <ModalLabel htmlFor='modalName'> Name </ModalLabel>\n              <ModalInput maxLength={16} id='modalName' type='text' name='name' defaultValue={name}/>\n            </ModalInputContainer>\n            \n            <ModalInputContainer>\n              <ModalLabel htmlFor='modalNumber'> Phone number </ModalLabel> \n              <ModalInput maxLength={13} id='modalNumber' type='tel' name='number' defaultValue={number} /> \n            </ModalInputContainer>\n            <ModalButton type='submit'>Save</ModalButton>\n          </ModalForm>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ModalOnChangeContact","import PropTypes from 'prop-types';\nimport { ButtonChangeContact, ContactIcon, ButtonDeliteContact, ButtonText, ContactListItem, ContactListItemInfo, ContactListItemText } from \"./Contacttem.styled\"\nimport { useDispatch } from \"react-redux\"\nimport { useState } from \"react\";\nimport { deleteContactThunk } from \"redux/contacts/operations\";\nimport { createPortal } from 'react-dom';\nimport ModalOnChangeContact from \"components/ModalOnChangeContact/ModalOnChangeContact\";\nconst modalRoot=document.getElementById('modal-root')\n\nconst ContactItem = ({ id, name, number }) => {\n    const [open, setOpen] = useState(false);\n    const [deleting, setDeleting]=useState(false)\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const dispatch = useDispatch()\n    const handleDelete = (event) => {\n        setDeleting(true)\n        dispatch(deleteContactThunk(id))\n    }\n\n    return (<ContactListItem>\n                    <ContactIcon />\n                            <ContactListItemInfo>\n                             <ContactListItemText>{name}: {number}</ContactListItemText>\n                                <ButtonChangeContact\n                                    type=\"button\"\n                                    onClick={handleOpen}\n                                >\n                            <ButtonText>Change</ButtonText>\n                                </ButtonChangeContact> \n                                <ButtonDeliteContact\n                                    disabled={deleting}\n                                    type=\"button\"\n                                    onClick={handleDelete}\n                                >\n                            {!deleting\n                                ? <ButtonText>DELETE</ButtonText>\n                                : <ButtonText>deleting</ButtonText> }  \n                                </ButtonDeliteContact> \n                            </ContactListItemInfo> \n                        {createPortal(\n                            <ModalOnChangeContact onCloseModal={handleClose} open={open} id={id} name={name} number={number} />,\n          modalRoot\n  )}\n             </ContactListItem>\n        \n    )\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number:PropTypes.string.isRequired\n}\n\nexport default ContactItem","export const filterSelector=state=>state.filter","import React from \"react\";\nimport { ContactListContainer, NoContactsText} from \"./ContactList.styled\";\nimport ContactItem from \"./Contacttem/ContactItem\";\nimport {   useSelector } from \"react-redux\";\nimport { contactsSelector } from \"redux/contacts/selectors\";\nimport { filterSelector } from \"redux/filter/selectors\";\nconst ContactList=()=>{\n    const contacts = useSelector(contactsSelector)\n    const filter = useSelector(filterSelector)\n    const currentContacts= contacts.filter(({name})=>name.toUpperCase().includes(filter.toUpperCase()))\n\n    return (\n        <ContactListContainer >\n            {contacts.length===0 && !filter && <NoContactsText>Your phone book is empty. Add contacts to it.</NoContactsText>}\n            {currentContacts.length === 0 && filter\n             ? <NoContactsText>Contacts matching your request were not found</NoContactsText>\n              :  currentContacts?.map(({ id, name, number }) => {\n                return (<ContactItem key={id} id={id} name={name} number={number} />)\n            })} \n        </ContactListContainer>\n        )\n}\n\n\nexport default ContactList\n\n","import ContactForm from \"components/ContactForm/ContactForm\"\nimport ContactsCounter from \"components/ContactsCounter/ContactsCounter\"\nimport { ApiTitleH1,ApiTitleH2, ContactsContainer } from \"./Contacts.styled\"\nimport Filter from \"components/Filter/Filter\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchContactsThunk } from \"redux/contacts/operations\"\nimport ContactList from \"components/ContactList/ContactList\"\nimport { isLoadingSelector } from \"redux/contacts/selectors\"\nimport { ContactsSpinner } from \"components/Spiner/Spiner\"\nconst Contacts = () => {\n\n    const dispatch = useDispatch()\n    const auth = useSelector(state => state.auth.token)\n    const isLoading=useSelector(isLoadingSelector)\n    \n    useEffect(() => { \n        if (auth) {\n           dispatch(fetchContactsThunk())\n        }\n        \n    }, [auth, dispatch])\n\n\n    return (<ContactsContainer>\n                {isLoading\n                ? <ContactsSpinner/>\n                : <>\n                    <ApiTitleH1>Phonebook</ApiTitleH1>\n                    <ContactForm />\n                    <ContactsCounter/>\n                    <Filter />\n                    <ApiTitleH2>Contacts</ApiTitleH2>\n                    <ContactList />\n                  </>\n                }\n           </ContactsContainer>)\n}\nexport default Contacts"],"names":["FormContainer","styled","Form","_templateObject","_taggedTemplateLiteral","FormLabelName","_templateObject2","FormInputName","Field","_templateObject3","FormInputTel","_templateObject4","FormButton","_templateObject5","ErrorText","_templateObject6","contactsSelector","state","contacts","items","isLoadingSelector","isLoading","schame","yup","name","required","max","trim","matches","phone","initialValue","FormError","_ref","_jsx","ErrorMessage","render","message","_jsxs","children","useSelector","dispatch","useDispatch","Formik","initialValues","onSubmit","_ref2","actions","newName","some","_ref3","alert","concat","addContactThunk","number","toString","resetForm","validationSchema","autoComplete","type","countContacts","length","CounterContactsContainer","CounterTextTitle","CounterText","ApiTitleH1","ApiTitleH2","ContactsContainer","ContactsBg","FilterContainer","FilterLable","FilterInput","htmlFor","id","onChange","debounce","event","setStatusFilter","target","value","ContactListContainer","NoContactsText","ContactListItem","ContactListItemInfo","ContactIcon","IoPersonCircleSharp","ContactListItemText","ButtonChangeContact","Button","ButtonDeliteContact","ButtonText","_templateObject7","ModalTitle","ModalForm","ModalInputContainer","ModalLabel","ModalInput","ModalButton","style","position","top","left","transform","width","bgcolor","border","boxShadow","borderRadius","outline","p","onCloseModal","open","Modal","onClose","Box","sx","e","preventDefault","str","elements","RegExp","test","contact","changeContactThunk","maxLength","defaultValue","modalRoot","document","getElementById","_useState","useState","_useState2","_slicedToArray","setOpen","_useState3","_useState4","deleting","setDeleting","onClick","disabled","deleteContactThunk","createPortal","ModalOnChangeContact","filterSelector","filter","currentContacts","toUpperCase","includes","map","ContactItem","auth","token","useEffect","fetchContactsThunk","ContactsSpinner","_Fragment","ContactForm","ContactsCounter","Filter","ContactList"],"sourceRoot":""}